{"ast":null,"code":"import _classCallCheck from \"/Users/lichunmiao/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lichunmiao/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lichunmiao/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lichunmiao/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lichunmiao/Desktop/React/counter-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lichunmiao/Desktop/React/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\"; // this file is created and written\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0,\n      imageUrl: \"https://picsum.photos/200\",\n      tags: [\"tag1\", \"tag2\", \"tag3\"] //tags: []\n\n    };\n\n    _this.handleIncrement = function () {\n      //console.log(\"Increment Clicked\", this);\n      //this.state.count++;\n\n      /* bind event之后就可以 explicitely notify the react the change*/\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    _this.styles = {\n      fontSize: 10,\n      fontWeight: \"bold\"\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: this.getBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.formatCount()), React.createElement(\"button\", {\n        onClick: this.handleIncrement //此处的handling event不能加（）\n        ,\n        className: \"btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Increment\"));\n    }\n  }, {\n    key: \"renderTags\",\n    value: function renderTags() {\n      if (this.state.tags.length === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"There are no tags!\");\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.tags.map(function (tag) {\n        return React.createElement(\"li\", {\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, tag);\n      }));\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 badge-\";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\"; //here we use bootstrap classes badge-warning/ badge-primary\n\n      return classes;\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.state.count; //const x = <h1>Zero</h1>;\n      //return count === 0 ? <h1>Zero</h1> : count;\n\n      return count === 0 ? \"Zero\" : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/lichunmiao/Desktop/React/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","imageUrl","tags","handleIncrement","setState","styles","fontSize","fontWeight","getBadgeClasses","formatCount","length","map","tag","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;IAEMC,O;;;;;;;;;;;;;;;;;UAGJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,QAAQ,EAAE,2BAFJ;AAGNC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAHA,CAIN;;AAJM,K;;UAeRC,e,GAAkB,YAAM;AACtB;AACA;;AAEA;AACA,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,K;;UAGDK,M,GAAS;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,UAAU,EAAE;AAFL,K;;;;;;6BAKA;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA6BE;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKC,WAAL,EAA1C,CA7BF,EA+BE;AACE,QAAA,OAAO,EAAE,KAAKN,eADhB,CACiC;AADjC;AAEE,QAAA,SAAS,EAAC,0BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA/BF,CADF;AAwCD;;;iCAEY;AACX,UAAI,KAAKJ,KAAL,CAAWG,IAAX,CAAgBQ,MAAhB,KAA2B,CAA/B,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AAElC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAKX,KAAL,CAAWG,IAAX,CAAgBS,GAAhB,CAAoB,UAAAC,GAAG;AAAA,eACtB;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,GAAf,CADsB;AAAA,OAAvB,CAFH,CADF;AAQD;;;sCAEiB;AAChB,UAAIC,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,KAAKd,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD,CAFgB,CAGhB;;AACA,aAAOa,OAAP;AACD;;;kCAEa;AAAA,UACJb,KADI,GACM,KAAKD,KADX,CACJC,KADI,EAEZ;AACA;;AACA,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;;;EApGmBH,S;;AAuGtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\n// this file is created and written\n\nclass Counter extends Component {\n  //state object includes any data this component needs\n\n  state = {\n    count: 0,\n    imageUrl: \"https://picsum.photos/200\",\n    tags: [\"tag1\", \"tag2\", \"tag3\"]\n    //tags: []\n  };\n\n  //called when the class is created\n  //   constructor() {\n  //     super();\n  //     //console.log(\"constructor\", this);\n  //     this.handleIncrement = this.handleIncrement.bind(this);\n  //   }\n\n  //this is an event handler, 此处的=> 用于bind event handlers\n  handleIncrement = () => {\n    //console.log(\"Increment Clicked\", this);\n    //this.state.count++;\n\n    /* bind event之后就可以 explicitely notify the react the change*/\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  /* insert some CSS properties in styles */\n  styles = {\n    fontSize: 10,\n    fontWeight: \"bold\"\n  };\n\n  render() {\n    return (\n      <div>\n        {/*\n\n           div 里还可有<h1>Hello World</h1>这一个jsx表达式\n\n           <span>{this.state.count}</span>\n           \n           <span>{2 + 2}</span>\n           \n           <img src={this.state.imageUrl} alt=\"\" srcset=\"\" />\n           \n           <span>{this.formatCount()}</span>\n           \n           <span style={this.styles} className=\"badge badge-primary m-2\">\n          {this.formatCount()}\n           </span>\n\n           <span style={{ fontSize: 30 }} className=\"badge badge-primary m-2\">\n          {this.formatCount()}\n        </span>\n           此处的badge badge-primary 是bootstrap的classes\n\n        {this.state.tags.length === 0 && \"please create a new tag\"}\n        here this string can be any JSX expression \n\n        {this.renderTags()}\n           \n        */}\n\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n\n        <button\n          onClick={this.handleIncrement} //此处的handling event不能加（）\n          className=\"btn btn-secondary btn-sm\"\n        >\n          Increment\n        </button>\n      </div>\n    );\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n\n    return (\n      <ul>\n        {/*here we use the map method to render a list of items */}\n        {this.state.tags.map(tag => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    //here we use bootstrap classes badge-warning/ badge-primary\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    //const x = <h1>Zero</h1>;\n    //return count === 0 ? <h1>Zero</h1> : count;\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}